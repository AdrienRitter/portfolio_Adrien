import { listen, notify } from "./events";
async function onLoad(astroId, options, getHydrateCallback) {
  let innerHTML = null;
  let hydrate;
  async function load() {
    var _a;
    listen(load);
    const roots = document.querySelectorAll(`astro-root[ssr][uid="${astroId}"]`);
    if (roots.length === 0)
      return;
    if (typeof innerHTML !== "string") {
      let fragment = roots[0].querySelector(`astro-fragment`);
      if (fragment == null && roots[0].hasAttribute("tmpl")) {
        let template = roots[0].querySelector(`template[data-astro-template]`);
        if (template) {
          innerHTML = template.innerHTML;
          template.remove();
        }
      } else if (fragment) {
        innerHTML = fragment.innerHTML;
      }
    }
    if (!hydrate) {
      hydrate = await getHydrateCallback();
    }
    for (const root of roots) {
      if ((_a = root.parentElement) == null ? void 0 : _a.closest("astro-root[ssr]"))
        continue;
      await hydrate(root, innerHTML);
      root.removeAttribute("ssr");
    }
    notify();
  }
  load();
}
export {
  onLoad as default
};
