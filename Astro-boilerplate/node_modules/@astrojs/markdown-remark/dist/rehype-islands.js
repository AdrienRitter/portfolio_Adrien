var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
import { SKIP, visit as _visit } from "unist-util-visit";
const visit = _visit;
function rehypeIslands() {
  return function(node) {
    return visit(node, "element", (el) => {
      if (el.tagName == "astro-root") {
        visit(el, "text", (child, index, parent) => {
          if (child.type === "text") {
            if (parent && child.value.indexOf("<!--") > -1 && index != null) {
              parent.children.splice(index, 1, __spreadProps(__spreadValues({}, child), {
                type: "comment",
                value: child.value.replace("<!--", "").replace("-->", "").trim()
              }));
              return [SKIP, index];
            }
            child.value = child.value.replace(/\n+/g, "");
            return child;
          }
        });
      }
    });
  };
}
export {
  rehypeIslands as default
};
