export interface AstroTelemetryOptions {
    version: string;
}
export declare type TelemetryEvent = {
    eventName: string;
    payload: Record<string, any>;
};
export declare class AstroTelemetry {
    private opts;
    private rawProjectId;
    private sessionId;
    private config;
    private debug;
    private get astroVersion();
    private get ASTRO_TELEMETRY_DISABLED();
    private get TELEMETRY_DISABLED();
    constructor(opts: AstroTelemetryOptions);
    private getWithFallback;
    private get salt();
    private get enabled();
    private get anonymousId();
    private get notifyDate();
    private oneWayHash;
    private get projectId();
    private get isDisabled();
    setEnabled(value: boolean): void;
    clear(): void;
    private queue;
    private flush;
    notify(callback: () => Promise<boolean>): Promise<void>;
    record(event?: TelemetryEvent | TelemetryEvent[]): Promise<void>;
}
