import {
  listen,
  notify
} from "./chunk-6JSWWUGY.js";
import "./chunk-QOVRSCHT.js";

// node_modules/astro/dist/runtime/client/media.js
async function onMedia(astroId, options, getHydrateCallback) {
  let innerHTML = null;
  let hydrate;
  async function media() {
    listen(media);
    const cb = async () => {
      var _a;
      const roots = document.querySelectorAll(`astro-root[ssr][uid="${astroId}"]`);
      if (roots.length === 0)
        return;
      if (typeof innerHTML !== "string") {
        let fragment = roots[0].querySelector(`astro-fragment`);
        if (fragment == null && roots[0].hasAttribute("tmpl")) {
          let template = roots[0].querySelector(`template[data-astro-template]`);
          if (template) {
            innerHTML = template.innerHTML;
            template.remove();
          }
        } else if (fragment) {
          innerHTML = fragment.innerHTML;
        }
      }
      if (!hydrate) {
        hydrate = await getHydrateCallback();
      }
      for (const root of roots) {
        if ((_a = root.parentElement) == null ? void 0 : _a.closest("astro-root[ssr]"))
          continue;
        await hydrate(root, innerHTML);
        root.removeAttribute("ssr");
      }
      notify();
    };
    if (options.value) {
      const mql = matchMedia(options.value);
      if (mql.matches) {
        cb();
      } else {
        mql.addEventListener("change", cb, { once: true });
      }
    }
  }
  media();
}

// dep:astro_client_media_js
var astro_client_media_js_default = onMedia;
export {
  astro_client_media_js_default as default
};
//# sourceMappingURL=astro_client_media_js.js.map
